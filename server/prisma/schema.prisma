generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  firstName String
  lastName  String
  role      String
  password  String
  status    String @default("active")
  deals     Deal[]   // Relation to deals
}

model Customer {
  id        String   @id @default(uuid())
  firstName String
  lastName  String
  email     String?
  phone     String?
  company   String
  status    String
  source    String
  notes     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deals     Deal[]   // Relation to deals
}

model Task {
  id          String   @id @default(uuid())
  title       String
  description String?
  dueDate     DateTime?
  status      String   @default("pending") // pending, completed, etc.
  priority    String   @default("normal")  // low, normal, high
  assignedTo  String?  // user id
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Deal {
  id          String   @id @default(uuid())
  title       String
  description String?
  amount      Float
  currency    String   @default("ZMW")
  stage       String   @default("prospecting") // prospecting, qualification, proposal, negotiation, closed-won, closed-lost
  probability Int      @default(0) // 0-100 percentage
  expectedCloseDate DateTime?
  actualCloseDate DateTime?
  customerId  String
  assignedTo  String?
  source      String?
  notes       String?
  dealType    String   @default("fuel") // fuel, insurance
  litresPerMonth Int?  // For fuel deals
  insuranceType String? // For insurance deals (3rd Party, Comprehensive)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  customer    Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  assignedUser User?   @relation(fields: [assignedTo], references: [id])
}